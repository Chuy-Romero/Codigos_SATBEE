#include <SPI.h>       /*librerias para usar el modulo de readiocomunicacion*/
#include <nRF24L01.h>
#include <RF24.h>

const int pinCE = 9;          /*pines  dee uso del modulo*/
const int pinCSN = 10;
RF24 radio(pinCE, pinCSN);

const uint64_t pipe = 0xE8E8F0F0E1LL;   /*direccion de conexion entre las antenas*/

float data[9];           /*arreglo que almacena los datos recividos*/ 

void setup() {
  radio.begin();       /*iniciamos el modulo*/
  Serial.begin(9600);  /*iniciamos comunicacion serial*/
  radio.openReadingPipe(1, pipe);     /*lo iniciamos como receptor*/
  radio.startListening();
}

void loop() {
  if(radio.available()){           /*detecta si hay un emisor disponible*/
    radio.read(data, sizeof data);  /*kee los datos enviados por el emisor
    Serial.print("Temperatura = ");  /*recive cada dato y lo imprime en el monittor serial*/
    Serial.print(data [0]);
    Serial.println("Â°C");
    Serial.print("Presion = ");
    Serial.print(data [1]);
    Serial.println("Pa");
    Serial.print("Altura = ");
    Serial.print(data [2]);
    Serial.print("Aceleracionen x =  ");
    Serial.print(data [3]);
    Serial.println("m/s2");
    Serial.print("Aceleracionen y =  ");
    Serial.print(data [4]);
    Serial.println("m/s2");
    Serial.print("Aceleracionen z =  ");
    Serial.print(data [5]);
    Serial.println("m/s2");
    Serial.print("velodicidad angular x= ");
    Serial.print(data [6]);
    Serial.println("grad/s");
    Serial.print("velodicidad angular y ");
    Serial.print(data [7]);
    Serial.println("grad/s");
    Serial.print("velodicidad angular z");
    Serial.print(data [8]);
    Serial.println("grad/s");
    
  }
  Serial.println(); /*impirme un espacio*/
  delay(1000);      /*repite el proceso cada 1 segundo*/
}
